services:
  zitadel:
    restart: "always"
    networks:
      - "zitadel"
    image: "ghcr.io/zitadel/zitadel:latest"
    # ZITADEL_MASTERKEY: 'SAcD5TY0QPp89ip28bZPfEA5WDxqmobx' # run tr -dc A-Za-z0-9 </dev/urandom | head -c 32
    command: "start-from-init --config /zitadel-config.yaml --masterkey ${MASTERKEY} --tlsMode external"
    environment:
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_USERNAME: ${ADMIN_USERNAME}
      ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORD: ${ADMIN_PASSWORD}
      ZITADEL_EXTERNALDOMAIN: "auth.admintera.com"
      ZITADEL_EXTERNALPORT: 443
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_TLS_ENABLED: false
      ZITADEL_DATABASE_POSTGRES_HOST: db
      ZITADEL_DATABASE_POSTGRES_PORT: 5432
      ZITADEL_DATABASE_POSTGRES_DATABASE: zitadel
      ZITADEL_DATABASE_POSTGRES_USER_USERNAME: ${PG_USER}
      ZITADEL_DATABASE_POSTGRES_USER_PASSWORD: ${PG_PASSWORD}
      ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME: ${PG_USER}
      ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD: ${PG_PASSWORD}

    depends_on:
      db:
        condition: "service_healthy"
    ports:
      - "8090:8080"
    volumes:
      - "./zitadel-config.yaml:/zitadel-config.yaml:ro"

  db:
    restart: "always"
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGUSER: ${PG_USER}
      PGPASSWORD: ${PG_PASSWORD}
    networks:
      - "zitadel"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "zitadel", "-U", "postgresuser"]
      interval: "10s"
      timeout: "30s"
      retries: 5
      start_period: "20s"
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  zitadel:

volumes:
  postgres_data:
